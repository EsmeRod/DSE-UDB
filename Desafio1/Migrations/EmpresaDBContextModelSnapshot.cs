// <auto-generated />
using System;
using Desafio1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio1.Migrations
{
    [DbContext(typeof(EmpresaDBContext))]
    partial class EmpresaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Desafio1.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDep")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "",
                            NomDep = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "",
                            NomDep = "Tecnologia"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "",
                            NomDep = "Ventas"
                        });
                });

            modelBuilder.Entity("Desafio1.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FecContr")
                        .HasColumnType("date");

                    b.Property<int?>("IDDep")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IDDep");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "",
                            FecContr = new DateOnly(2010, 8, 15),
                            IDDep = 1,
                            Nacimiento = new DateOnly(1985, 5, 20),
                            Nombre = "John Doe",
                            Salario = 50000m
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "",
                            FecContr = new DateOnly(2015, 1, 25),
                            IDDep = 2,
                            Nacimiento = new DateOnly(1990, 3, 10),
                            Nombre = "Jane Smith",
                            Salario = 70000m
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "",
                            FecContr = new DateOnly(2012, 6, 18),
                            IDDep = 3,
                            Nacimiento = new DateOnly(1982, 11, 22),
                            Nombre = "Mark Johnson",
                            Salario = 55000m
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "",
                            FecContr = new DateOnly(2005, 10, 12),
                            IDDep = 1,
                            Nacimiento = new DateOnly(1978, 7, 30),
                            Nombre = "Emily Davis",
                            Salario = 75000m
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "",
                            FecContr = new DateOnly(2020, 4, 15),
                            IDDep = 2,
                            Nacimiento = new DateOnly(1995, 12, 5),
                            Nombre = "Michael Brown",
                            Salario = 60000m
                        });
                });

            modelBuilder.Entity("Desafio1.Models.Empleado", b =>
                {
                    b.HasOne("Desafio1.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("IDDep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Desafio1.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
